// This file is automatically generated by ABP framework to use MVC Controllers from CSharp
using LINGYUN.Abp.OssManagement;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Volo.Abp;
using Volo.Abp.Application.Dtos;
using Volo.Abp.Content;
using Volo.Abp.DependencyInjection;
using Volo.Abp.Http.Client;
using Volo.Abp.Http.Client.ClientProxying;
using Volo.Abp.Http.Modeling;

// ReSharper disable once CheckNamespace
namespace LINGYUN.Abp.OssManagement;

[Dependency(ReplaceServices = true)]
[ExposeServices(typeof(IOssObjectAppService), typeof(OssObjectClientProxy))]
public partial class OssObjectClientProxy : ClientProxyBase<IOssObjectAppService>, IOssObjectAppService
{
    public virtual async Task<OssObjectDto> CreateAsync(CreateOssObjectInput input)
    {
        return await RequestAsync<OssObjectDto>(nameof(CreateAsync), new ClientProxyRequestTypeValue
        {
            { typeof(CreateOssObjectInput), input }
        });
    }

    public virtual async Task BulkDeleteAsync(BulkDeleteOssObjectInput input)
    {
        await RequestAsync(nameof(BulkDeleteAsync), new ClientProxyRequestTypeValue
        {
            { typeof(BulkDeleteOssObjectInput), input }
        });
    }

    public virtual async Task DeleteAsync(GetOssObjectInput input)
    {
        await RequestAsync(nameof(DeleteAsync), new ClientProxyRequestTypeValue
        {
            { typeof(GetOssObjectInput), input }
        });
    }

    public virtual async Task<OssObjectDto> GetAsync(GetOssObjectInput input)
    {
        return await RequestAsync<OssObjectDto>(nameof(GetAsync), new ClientProxyRequestTypeValue
        {
            { typeof(GetOssObjectInput), input }
        });
    }

    public virtual async Task<IRemoteStreamContent> GetContentAsync(GetOssObjectInput input)
    {
        return await RequestAsync<IRemoteStreamContent>(nameof(GetContentAsync), new ClientProxyRequestTypeValue
        {
            { typeof(GetOssObjectInput), input }
        });
    }

    public virtual async Task<string> GenerateUrlAsync(GetOssObjectInput input)
    {
        return await RequestAsync<string>(nameof(GenerateUrlAsync), new ClientProxyRequestTypeValue
        {
            { typeof(GetOssObjectInput), input }
        });
    }

    public virtual async Task<IRemoteStreamContent> DownloadAsync(string urlKey)
    {
        return await RequestAsync<IRemoteStreamContent>(nameof(DownloadAsync), new ClientProxyRequestTypeValue
        {
            { typeof(string), urlKey }
        });
    }
}
