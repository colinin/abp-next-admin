// This file is automatically generated by ABP framework to use MVC Controllers from CSharp
using LINGYUN.Abp.OssManagement;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Volo.Abp;
using Volo.Abp.Application.Dtos;
using Volo.Abp.DependencyInjection;
using Volo.Abp.Http.Client;
using Volo.Abp.Http.Client.ClientProxying;
using Volo.Abp.Http.Modeling;

// ReSharper disable once CheckNamespace
namespace LINGYUN.Abp.OssManagement;

[Dependency(ReplaceServices = true)]
[ExposeServices(typeof(IOssContainerAppService), typeof(OssContainerClientProxy))]
public partial class OssContainerClientProxy : ClientProxyBase<IOssContainerAppService>, IOssContainerAppService
{
    public virtual async Task<OssContainerDto> CreateAsync(string name)
    {
        return await RequestAsync<OssContainerDto>(nameof(CreateAsync), new ClientProxyRequestTypeValue
        {
            { typeof(string), name }
        });
    }

    public virtual async Task DeleteAsync(string name)
    {
        await RequestAsync(nameof(DeleteAsync), new ClientProxyRequestTypeValue
        {
            { typeof(string), name }
        });
    }

    public virtual async Task<OssContainerDto> GetAsync(string name)
    {
        return await RequestAsync<OssContainerDto>(nameof(GetAsync), new ClientProxyRequestTypeValue
        {
            { typeof(string), name }
        });
    }

    public virtual async Task<OssContainersResultDto> GetListAsync(GetOssContainersInput input)
    {
        return await RequestAsync<OssContainersResultDto>(nameof(GetListAsync), new ClientProxyRequestTypeValue
        {
            { typeof(GetOssContainersInput), input }
        });
    }

    public virtual async Task<OssObjectsResultDto> GetObjectListAsync(GetOssObjectsInput input)
    {
        return await RequestAsync<OssObjectsResultDto>(nameof(GetObjectListAsync), new ClientProxyRequestTypeValue
        {
            { typeof(GetOssObjectsInput), input }
        });
    }
}
