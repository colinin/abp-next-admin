// This file is automatically generated by ABP framework to use MVC Controllers from CSharp
using LINGYUN.Platform.Menus;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Volo.Abp;
using Volo.Abp.Application.Dtos;
using Volo.Abp.DependencyInjection;
using Volo.Abp.Http.Client;
using Volo.Abp.Http.Client.ClientProxying;
using Volo.Abp.Http.Modeling;

// ReSharper disable once CheckNamespace
namespace LINGYUN.Platform.Menus;

[Dependency(ReplaceServices = true)]
[ExposeServices(typeof(IUserFavoriteMenuAppService), typeof(UserFavoriteMenuClientProxy))]
public partial class UserFavoriteMenuClientProxy : ClientProxyBase<IUserFavoriteMenuAppService>, IUserFavoriteMenuAppService
{
    public virtual async Task<UserFavoriteMenuDto> CreateAsync(Guid userId, UserFavoriteMenuCreateDto input)
    {
        return await RequestAsync<UserFavoriteMenuDto>(nameof(CreateAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), userId },
            { typeof(UserFavoriteMenuCreateDto), input }
        });
    }

    public virtual async Task<UserFavoriteMenuDto> CreateMyFavoriteMenuAsync(UserFavoriteMenuCreateDto input)
    {
        return await RequestAsync<UserFavoriteMenuDto>(nameof(CreateMyFavoriteMenuAsync), new ClientProxyRequestTypeValue
        {
            { typeof(UserFavoriteMenuCreateDto), input }
        });
    }

    public virtual async Task DeleteAsync(Guid userId, UserFavoriteMenuRemoveInput input)
    {
        await RequestAsync(nameof(DeleteAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), userId },
            { typeof(UserFavoriteMenuRemoveInput), input }
        });
    }

    public virtual async Task DeleteMyFavoriteMenuAsync(UserFavoriteMenuRemoveInput input)
    {
        await RequestAsync(nameof(DeleteMyFavoriteMenuAsync), new ClientProxyRequestTypeValue
        {
            { typeof(UserFavoriteMenuRemoveInput), input }
        });
    }

    public virtual async Task<ListResultDto<UserFavoriteMenuDto>> GetListAsync(Guid userId, UserFavoriteMenuGetListInput input)
    {
        return await RequestAsync<ListResultDto<UserFavoriteMenuDto>>(nameof(GetListAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), userId },
            { typeof(UserFavoriteMenuGetListInput), input }
        });
    }

    public virtual async Task<ListResultDto<UserFavoriteMenuDto>> GetMyFavoriteMenuListAsync(UserFavoriteMenuGetListInput input)
    {
        return await RequestAsync<ListResultDto<UserFavoriteMenuDto>>(nameof(GetMyFavoriteMenuListAsync), new ClientProxyRequestTypeValue
        {
            { typeof(UserFavoriteMenuGetListInput), input }
        });
    }

    public virtual async Task<UserFavoriteMenuDto> UpdateAsync(Guid userId, UserFavoriteMenuUpdateDto input)
    {
        return await RequestAsync<UserFavoriteMenuDto>(nameof(UpdateAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), userId },
            { typeof(UserFavoriteMenuUpdateDto), input }
        });
    }

    public virtual async Task<UserFavoriteMenuDto> UpdateMyFavoriteMenuAsync(UserFavoriteMenuUpdateDto input)
    {
        return await RequestAsync<UserFavoriteMenuDto>(nameof(UpdateMyFavoriteMenuAsync), new ClientProxyRequestTypeValue
        {
            { typeof(UserFavoriteMenuUpdateDto), input }
        });
    }
}
