// This file is automatically generated by ABP framework to use MVC Controllers from CSharp
using LINGYUN.Platform.Feedbacks;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Volo.Abp;
using Volo.Abp.Application.Dtos;
using Volo.Abp.DependencyInjection;
using Volo.Abp.Http.Client;
using Volo.Abp.Http.Client.ClientProxying;
using Volo.Abp.Http.Modeling;

// ReSharper disable once CheckNamespace
namespace LINGYUN.Platform.Feedbacks;

[Dependency(ReplaceServices = true)]
[ExposeServices(typeof(IFeedbackAppService), typeof(FeedbackClientProxy))]
public partial class FeedbackClientProxy : ClientProxyBase<IFeedbackAppService>, IFeedbackAppService
{
    public virtual async Task<FeedbackDto> CreateAsync(FeedbackCreateDto input)
    {
        return await RequestAsync<FeedbackDto>(nameof(CreateAsync), new ClientProxyRequestTypeValue
        {
            { typeof(FeedbackCreateDto), input }
        });
    }

    public virtual async Task DeleteAsync(Guid id)
    {
        await RequestAsync(nameof(DeleteAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id }
        });
    }

    public virtual async Task<FeedbackDto> GetAsync(Guid id)
    {
        return await RequestAsync<FeedbackDto>(nameof(GetAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id }
        });
    }

    public virtual async Task<PagedResultDto<FeedbackDto>> GetListAsync(FeedbackGetListInput input)
    {
        return await RequestAsync<PagedResultDto<FeedbackDto>>(nameof(GetListAsync), new ClientProxyRequestTypeValue
        {
            { typeof(FeedbackGetListInput), input }
        });
    }
}
