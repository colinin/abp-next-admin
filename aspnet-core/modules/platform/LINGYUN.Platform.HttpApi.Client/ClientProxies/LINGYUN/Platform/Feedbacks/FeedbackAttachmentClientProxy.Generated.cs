// This file is automatically generated by ABP framework to use MVC Controllers from CSharp
using LINGYUN.Platform.Feedbacks;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Volo.Abp;
using Volo.Abp.Application.Dtos;
using Volo.Abp.Content;
using Volo.Abp.DependencyInjection;
using Volo.Abp.Http.Client;
using Volo.Abp.Http.Client.ClientProxying;
using Volo.Abp.Http.Modeling;

// ReSharper disable once CheckNamespace
namespace LINGYUN.Platform.Feedbacks;

[Dependency(ReplaceServices = true)]
[ExposeServices(typeof(IFeedbackAttachmentAppService), typeof(FeedbackAttachmentClientProxy))]
public partial class FeedbackAttachmentClientProxy : ClientProxyBase<IFeedbackAttachmentAppService>, IFeedbackAttachmentAppService
{
    public virtual async Task<IRemoteStreamContent> GetAsync(FeedbackAttachmentGetInput input)
    {
        return await RequestAsync<IRemoteStreamContent>(nameof(GetAsync), new ClientProxyRequestTypeValue
        {
            { typeof(FeedbackAttachmentGetInput), input }
        });
    }

    public virtual async Task<FeedbackAttachmentTempFileDto> UploadAsync(FeedbackAttachmentUploadInput input)
    {
        return await RequestAsync<FeedbackAttachmentTempFileDto>(nameof(UploadAsync), new ClientProxyRequestTypeValue
        {
            { typeof(FeedbackAttachmentUploadInput), input }
        });
    }

    public virtual async Task DeleteAsync(FeedbackAttachmentGetInput input)
    {
        await RequestAsync(nameof(DeleteAsync), new ClientProxyRequestTypeValue
        {
            { typeof(FeedbackAttachmentGetInput), input }
        });
    }
}
