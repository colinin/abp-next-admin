/* This file is automatically generated by ABP framework to use MVC Controllers from javascript. */


// module auditing

(function(){

  // controller labp.auditing.auditLogs.auditLog

  (function(){

    abp.utils.createNamespace(window, 'labp.auditing.auditLogs.auditLog');

    labp.auditing.auditLogs.auditLog['delete'] = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/auditing/audit-log/' + id + '',
        type: 'DELETE',
        dataType: null
      }, ajaxParams));
    };

    labp.auditing.auditLogs.auditLog.deleteMany = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/auditing/audit-log/bulk',
        type: 'DELETE',
        dataType: null,
        data: JSON.stringify(input)
      }, ajaxParams));
    };

    labp.auditing.auditLogs.auditLog.get = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/auditing/audit-log/' + id + '',
        type: 'GET'
      }, ajaxParams));
    };

    labp.auditing.auditLogs.auditLog.getList = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/auditing/audit-log' + abp.utils.buildQueryString([{ name: 'startTime', value: input.startTime }, { name: 'endTime', value: input.endTime }, { name: 'httpMethod', value: input.httpMethod }, { name: 'url', value: input.url }, { name: 'userId', value: input.userId }, { name: 'userName', value: input.userName }, { name: 'applicationName', value: input.applicationName }, { name: 'correlationId', value: input.correlationId }, { name: 'clientId', value: input.clientId }, { name: 'clientIpAddress', value: input.clientIpAddress }, { name: 'maxExecutionDuration', value: input.maxExecutionDuration }, { name: 'minExecutionDuration', value: input.minExecutionDuration }, { name: 'hasException', value: input.hasException }, { name: 'httpStatusCode', value: input.httpStatusCode }, { name: 'sorting', value: input.sorting }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));
    };

  })();

  // controller labp.auditing.auditLogs.entityChanges

  (function(){

    abp.utils.createNamespace(window, 'labp.auditing.auditLogs.entityChanges');

    labp.auditing.auditLogs.entityChanges.get = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/auditing/entity-changes/' + id + '',
        type: 'GET'
      }, ajaxParams));
    };

    labp.auditing.auditLogs.entityChanges.getList = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/auditing/entity-changes' + abp.utils.buildQueryString([{ name: 'auditLogId', value: input.auditLogId }, { name: 'startTime', value: input.startTime }, { name: 'endTime', value: input.endTime }, { name: 'changeType', value: input.changeType }, { name: 'entityId', value: input.entityId }, { name: 'entityTypeFullName', value: input.entityTypeFullName }, { name: 'sorting', value: input.sorting }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));
    };

    labp.auditing.auditLogs.entityChanges.getWithUsernameAsyncById = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/auditing/entity-changes/with-username/' + id + '',
        type: 'GET'
      }, ajaxParams));
    };

    labp.auditing.auditLogs.entityChanges.getWithUsernameAsyncByInput = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/auditing/entity-changes/with-username' + abp.utils.buildQueryString([{ name: 'entityId', value: input.entityId }, { name: 'entityTypeFullName', value: input.entityTypeFullName }]) + '',
        type: 'GET'
      }, ajaxParams));
    };

  })();

  // controller labp.auditing.logging.log

  (function(){

    abp.utils.createNamespace(window, 'labp.auditing.logging.log');

    labp.auditing.logging.log.get = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/auditing/logging/' + id + '',
        type: 'GET'
      }, ajaxParams));
    };

    labp.auditing.logging.log.getList = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/auditing/logging' + abp.utils.buildQueryString([{ name: 'startTime', value: input.startTime }, { name: 'endTime', value: input.endTime }, { name: 'level', value: input.level }, { name: 'machineName', value: input.machineName }, { name: 'environment', value: input.environment }, { name: 'application', value: input.application }, { name: 'context', value: input.context }, { name: 'requestId', value: input.requestId }, { name: 'requestPath', value: input.requestPath }, { name: 'correlationId', value: input.correlationId }, { name: 'processId', value: input.processId }, { name: 'threadId', value: input.threadId }, { name: 'hasException', value: input.hasException }, { name: 'sorting', value: input.sorting }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));
    };

  })();

  // controller labp.auditing.securityLogs.securityLog

  (function(){

    abp.utils.createNamespace(window, 'labp.auditing.securityLogs.securityLog');

    labp.auditing.securityLogs.securityLog['delete'] = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/auditing/security-log/' + id + '',
        type: 'DELETE',
        dataType: null
      }, ajaxParams));
    };

    labp.auditing.securityLogs.securityLog.deleteMany = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/auditing/security-log/bulk',
        type: 'DELETE',
        dataType: null,
        data: JSON.stringify(input)
      }, ajaxParams));
    };

    labp.auditing.securityLogs.securityLog.get = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/auditing/security-log/' + id + '',
        type: 'GET'
      }, ajaxParams));
    };

    labp.auditing.securityLogs.securityLog.getList = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/auditing/security-log' + abp.utils.buildQueryString([{ name: 'startTime', value: input.startTime }, { name: 'endTime', value: input.endTime }, { name: 'applicationName', value: input.applicationName }, { name: 'identity', value: input.identity }, { name: 'actionName', value: input.actionName }, { name: 'userId', value: input.userId }, { name: 'userName', value: input.userName }, { name: 'clientId', value: input.clientId }, { name: 'correlationId', value: input.correlationId }, { name: 'sorting', value: input.sorting }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));
    };

  })();

})();


