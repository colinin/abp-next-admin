// This file is automatically generated by ABP framework to use MVC Controllers from CSharp
using LINGYUN.Abp.Gdpr;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Volo.Abp;
using Volo.Abp.Application.Dtos;
using Volo.Abp.Content;
using Volo.Abp.DependencyInjection;
using Volo.Abp.Http.Client;
using Volo.Abp.Http.Client.ClientProxying;
using Volo.Abp.Http.Modeling;

// ReSharper disable once CheckNamespace
namespace LINGYUN.Abp.Gdpr;

[Dependency(ReplaceServices = true)]
[ExposeServices(typeof(IGdprRequestAppService), typeof(GdprRequestClientProxy))]
public partial class GdprRequestClientProxy : ClientProxyBase<IGdprRequestAppService>, IGdprRequestAppService
{
    public virtual async Task DeleteAsync(Guid id)
    {
        await RequestAsync(nameof(DeleteAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id }
        });
    }

    public virtual async Task DeletePersonalAccountAsync()
    {
        await RequestAsync(nameof(DeletePersonalAccountAsync));
    }

    public virtual async Task DeletePersonalDataAsync()
    {
        await RequestAsync(nameof(DeletePersonalDataAsync));
    }

    public virtual async Task<GdprRequestDto> GetAsync(Guid id)
    {
        return await RequestAsync<GdprRequestDto>(nameof(GetAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id }
        });
    }

    public virtual async Task<PagedResultDto<GdprRequestDto>> GetListAsync(GdprRequestGetListInput input)
    {
        return await RequestAsync<PagedResultDto<GdprRequestDto>>(nameof(GetListAsync), new ClientProxyRequestTypeValue
        {
            { typeof(GdprRequestGetListInput), input }
        });
    }

    public virtual async Task<IRemoteStreamContent> DownloadPersonalDataAsync(Guid requestId)
    {
        return await RequestAsync<IRemoteStreamContent>(nameof(DownloadPersonalDataAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), requestId }
        });
    }

    public virtual async Task PreparePersonalDataAsync()
    {
        await RequestAsync(nameof(PreparePersonalDataAsync));
    }
}
