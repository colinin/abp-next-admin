// This file is automatically generated by ABP framework to use MVC Controllers from CSharp
using LINGYUN.Abp.WebhooksManagement;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Volo.Abp;
using Volo.Abp.Application.Dtos;
using Volo.Abp.DependencyInjection;
using Volo.Abp.Http.Client;
using Volo.Abp.Http.Client.ClientProxying;
using Volo.Abp.Http.Modeling;

// ReSharper disable once CheckNamespace
namespace LINGYUN.Abp.WebhooksManagement;

[Dependency(ReplaceServices = true)]
[ExposeServices(typeof(IWebhookSubscriptionAppService), typeof(WebhookSubscriptionClientProxy))]
public partial class WebhookSubscriptionClientProxy : ClientProxyBase<IWebhookSubscriptionAppService>, IWebhookSubscriptionAppService
{
    public virtual async Task<WebhookSubscriptionDto> CreateAsync(WebhookSubscriptionCreateInput input)
    {
        return await RequestAsync<WebhookSubscriptionDto>(nameof(CreateAsync), new ClientProxyRequestTypeValue
        {
            { typeof(WebhookSubscriptionCreateInput), input }
        });
    }

    public virtual async Task DeleteAsync(Guid id)
    {
        await RequestAsync(nameof(DeleteAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id }
        });
    }

    public virtual async Task DeleteManyAsync(WebhookSubscriptionDeleteManyInput input)
    {
        await RequestAsync(nameof(DeleteManyAsync), new ClientProxyRequestTypeValue
        {
            { typeof(WebhookSubscriptionDeleteManyInput), input }
        });
    }

    public virtual async Task<WebhookSubscriptionDto> GetAsync(Guid id)
    {
        return await RequestAsync<WebhookSubscriptionDto>(nameof(GetAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id }
        });
    }

    public virtual async Task<PagedResultDto<WebhookSubscriptionDto>> GetListAsync(WebhookSubscriptionGetListInput input)
    {
        return await RequestAsync<PagedResultDto<WebhookSubscriptionDto>>(nameof(GetListAsync), new ClientProxyRequestTypeValue
        {
            { typeof(WebhookSubscriptionGetListInput), input }
        });
    }

    public virtual async Task<WebhookSubscriptionDto> UpdateAsync(Guid id, WebhookSubscriptionUpdateInput input)
    {
        return await RequestAsync<WebhookSubscriptionDto>(nameof(UpdateAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id },
            { typeof(WebhookSubscriptionUpdateInput), input }
        });
    }

    public virtual async Task<ListResultDto<WebhookAvailableGroupDto>> GetAllAvailableWebhooksAsync()
    {
        return await RequestAsync<ListResultDto<WebhookAvailableGroupDto>>(nameof(GetAllAvailableWebhooksAsync));
    }
}
